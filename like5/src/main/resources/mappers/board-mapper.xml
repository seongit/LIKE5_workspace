<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

    <resultMap id="board" type="Board">
        <result column="boa_no" property="bno" />
        <result column="mem_no" property="mno" />
        <result column="boa_category" property="category" />
        <result column="boa_status" property="status" />
        <result column="boa_title" property="title" />
        <result column="boa_content" property="content" />
        <result column="boa_enroll_date" property="enrollDate" />
        <result column="boa_update_date" property="updateDate" />
        <result column="boa_count" property="count" />
        <result column="boa_like" property="like" />
        <result column="boa_scrap" property="scrap" />
        <result column="tag_name" property="tag" />
        <result column="boa_img_path" property="imgPath" />
        <result column="nickname" property="nickname" />
        <result column="reply" property="reply" />
    </resultMap>
    
    <resultMap id="report" type="Report">
        <result column="report_unique" property="rno" />
        <result column="mem_no" property="mno" />
        <result column="category" property="category" />
        <result column="ref_no" property="refNo" />
        <result column="report_date" property="reportDate" />
        <result column="report_reason" property="reason" />
        <result column="nickname" property="nickname" />
        <result column="boa_title" property="title" />
    </resultMap>
    
      <resultMap id="reply" type="Reply">
        <result column="rep_no" property="repNo" />
        <result column="boa_no" property="boaNo" />
        <result column="mem_no" property="memNo" />
        <result column="rep_content" property="repContent" />
        <result column="rep_enroll_date" property="repEnrollDate" />
        <result column="rep_adoption" property="repAdoption" />
        <result column="rep_status" property="repStatus" />
        <result column="ref_rep_no" property="refRepNo" />
        <result column="ref_level" property="refLevel" />
        <result column="nickname" property="nickname" />
        <result column="mem_profile" property="memProfile" />
    </resultMap>

    <!-- [재환] 관리자단 게시글 개수 조회 -->
    <select id="getBoardCount" resultType="_int">
        select count(*) from board where boa_status = 'Y'
    </select>

    <!-- [재환] 관리자단 게시글 리스트 조회 -->
    <select id="getBoardList" resultMap="board">
        select *
        from board
        join member using(mem_no)
        where boa_status = 'Y'
        order by boa_no desc
    </select>

    <!-- [재환] 관리자단 검색된 게시글 개수 조회 -->
    <select id="getSearchBoardCount" resultType="_int">
        select count(*)
        from board
        join member using(mem_no)
        where boa_status = 'Y'
        <choose>
            <when test="condition == 'title'">
                and boa_title
            </when>
            <when test="condition == 'category'">
                and boa_category
            </when>
            <otherwise>
                and nickname
            </otherwise>
        </choose>
        like '%' || #{keyword} || '%'
    </select>

    <!-- [재환] 관리자단 검색된 게시글 리스트 조회 -->
    <select id="getSearchBoardList" resultMap="board">
        select BOA_NO
             , BOA_CATEGORY
             , BOA_TITLE
             , NICKNAME
             , BOA_ENROLL_DATE
        from board
        join member using(mem_no)
        where boa_status = 'Y'
        <choose>
            <when test="condition == 'title'">
                and boa_title
            </when>
            <when test="condition == 'category'">
                and boa_category
            </when>
            <otherwise>
                and nickname
            </otherwise>
        </choose>
        like '%' || #{keyword} || '%'
        order
        by boa_no desc
    </select>

    <!-- [재환] 관리자단 게시글 삭제 -->
    <update id="deleteBoard">
        update board
           set boa_status = 'N'
         where boa_no = #{bno}
    </update>

    <!-- [재환] 관리자단 신고내역 개수 조회 -->
    <select id="getReportCount" resultType="_int">
        select count(*)
        from report
        join board on(REF_NO = BOA_NO)
        where boa_status = 'Y'
    </select>

    <!-- [재환] 관리자단 신고내역 리스트 조회 -->
    <select id="getReportList" resultMap="report">
        select REPORT_UNIQUE
             , NICKNAME
             , BOA_TITLE
             , CATEGORY
             , REPORT_REASON
             , REPORT_DATE
          from report
          join member using(MEM_NO)
          join board on(REF_NO = BOA_NO)
         where boa_status = 'Y'
         order by REPORT_UNIQUE desc
    </select>

    <!-- [재환] 관리자단 검색된 신고내역 개수 조회 -->
    <select id="getSearchReportCount" resultType="_int">
        select count(*)
        from report
        join member using(MEM_NO)
        join board on(REF_NO = BOA_NO)
        where
        <choose>
            <when test="condition == 'title'">
                boa_title
            </when>
            <when test="condition == 'category'">
                category
            </when>
            <otherwise>
                nickname
            </otherwise>
        </choose>
        like '%' || #{keyword} || '%'
        and boa_status = 'Y'
    </select>

    <!-- [재환] 관리자단 검색된 신고내역 리스트 조회 -->
    <select id="getSearchReportList" resultMap="report">
        select REPORT_UNIQUE
             , NICKNAME
             , BOA_TITLE
             , CATEGORY
             , REPORT_REASON
             , REPORT_DATE
        from report
        join member using(MEM_NO)
        join board on(REF_NO = BOA_NO)
        where
        <choose>
            <when test="condition == 'title'">
                boa_title
            </when>
            <when test="condition == 'category'">
                category
            </when>
            <otherwise>
                nickname
            </otherwise>
        </choose>
        like '%' || #{keyword} || '%'
        and boa_status = 'Y'
        order
        by REPORT_UNIQUE desc
    </select>

    <!-- [재환] 관리자단 신고내역 삭제 기능 -->
    <update id="deleteReport">
        update board
           set boa_status = 'N'
         where boa_no = #{rno}
    </update>

    <!-- [재환] 관리자단 태그별 게시글 개수 조회 -->
    <select id="getTagCount" resultType="_int">
        select count(*)
        from board
        where tag_name like '%#' || #{tagName} || '%'
    </select>

    <!-- [재환] 관리자단 태그별 게시글 리스트 조회 -->
    <select id="tagDetailList" resultMap="board">
        select BOA_CATEGORY
             , BOA_TITLE
             , NICKNAME
             , BOA_ENROLL_DATE
          from BOARD
          join MEMBER using(mem_no)
         where tag_name like '%#' || #{tagName} || '%'
    </select>

    <!--                    성은                           -->

    <!-- [커뮤니티] - 전체 목록 리스트 페이징 처리시 필요한 게시글 전체 count-->
    <select id="comListCount" resultType="_int">
        select
            count(*) count
        from
            board
        where
            regexp_like (boa_category,'일상|스터디모집')
             and boa_status='Y'
    </select>

    <!-- [커뮤니티] - 전체 목록 리스트 조회  -->
    <select id="comList" resultMap="board">
         select
            boa_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
             ,(select count(*)
                from reply r
                where r.boa_no = b.boa_no) reply
        from board b
                 join member using (mem_no)
        where regexp_like (boa_category,'일상|스터디모집')
          and boa_status='Y'
     	<choose>
	    	<when test="orderBy=='count'">
	    		 order by boa_count desc
	    	</when>
	    	<when test="orderBy=='reply'">
	    		order by reply  desc
    		</when>
    		<otherwise>
   			   order by boa_enroll_date desc
    		</otherwise>
	    </choose>
    </select>

	<!-- [커뮤니티] - 키워드 검색 결과 list count -->
	<select id="comSearchListCount" resultType="_int">
		select count(*)
			from board
			join member using(mem_no)
			where boa_status = 'Y'
			and regexp_like (boa_category,'일상|스터디모집')
			<choose>
				<when test="condition=='titleAndcontent'">
					and boa_title like '%'||#{keyword}||'%' or boa_content 
				</when>
				<when test="condition=='title'">
					and boa_title 
				</when>
				<otherwise>
					and nickname 
				</otherwise>
			</choose>
			like '%'||#{keyword}||'%'
			order by boa_enroll_date desc
	</select>
	
	<!-- [커뮤니티] - 키워드 검색 결과 조회 -->
	<select id="comSearchList" resultMap="board">
	    select
            boa_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
             ,(select count(*)
                from reply r
                where r.boa_no = b.boa_no) reply
        from board b
	     join member using(mem_no)
	    where boa_status = 'Y'
	    and regexp_like (boa_category,'일상|스터디모집')
	    <choose>
		    <when test="condition=='titleAndcontent'">
		    	and boa_title like '%'||#{keyword}||'%' or boa_content 
		    </when>
		    <when test="condition=='title'">
		    	and boa_title 
		    </when>
		    <otherwise>
		    	and nickname 
	    	</otherwise>
	    </choose>
	    like '%'||#{keyword}||'%'

		order by boa_enroll_date desc
    	
	</select>

	<!-- [커뮤니티] - 카테고리별 게시글 list count -->
	<select id="comOrderByListCount" resultType="_int">
	    select
           count(*)
        from board b
	     join member using(mem_no)
	    where boa_status = 'Y'
	    <choose>
	    	<when test="condition=='daily'">
	    		and regexp_like (boa_category,'일상')
	    	</when>
	    	<otherwise>
	    		and regexp_like (boa_category,'스터디모집')
	    	</otherwise>
	    </choose>
	    order by boa_enroll_date desc
	</select>
	
	
	<!-- [커뮤니티] - 전체 | 일상 | 스터디 모집 | 카테고리별 조회 -->
	<select id="comOrderByCategory" resultMap="board">
	    select
            boa_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
             ,(select count(*)
                from reply r
                where r.boa_no = b.boa_no) reply
        from board b
	     join member using(mem_no)
	    where boa_status = 'Y'
   	    <choose>
	    	<when test="condition=='daily'">
	    		and regexp_like (boa_category,'일상')
	    	</when>
	    	<otherwise>
	    		and regexp_like (boa_category,'스터디모집')
	    	</otherwise>
	    </choose>
	    order by boa_enroll_date desc
	</select>
	
	
	<!-- 최신 | 조회수 | 댓글수 기준으로 조회 -->	
   <select id="comOrderByCount" resultMap="board">
         select
            boa_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
             ,(select count(*)
                from reply r
                where r.boa_no = b.boa_no) reply
        from board b
                 join member using (mem_no)
        where regexp_like (boa_category,'일상|스터디모집')
          and boa_status='Y'
     	<choose>
	    	<when test="orderBy=='views'">
	    		 order by boa_count desc,boa_enroll_date 
	    	</when>
	    	<when test="orderBy=='reply'">
	    		order by reply  desc,boa_enroll_date 
    		</when>
    		<otherwise>
   			   order by boa_enroll_date desc
    		</otherwise>
	    </choose>
    </select>
	
	<!-- [커뮤니티 | 칼럼] 게시글 상세보기 -->
	<select id="boardDetail" resultMap="board">
        select
            boa_no
            ,mem_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
             ,(select count(*)
                from reply r
                where r.boa_no = b.boa_no) reply
        from board b
                 join member using (mem_no)
        where boa_no = #{bno}
          and boa_status='Y'
          and regexp_like (boa_category,'칼럼|일상|스터디모집')
	</select>
	

	
	<!-- [공통] 게시글 상세보기시 조회수 증가 -->
	<update id="increaseCount">
	     update 
	     	board
         set 
         	boa_count = boa_count + 1
         where 
            boa_no = #{bno}
         and boa_status='Y'
	</update>
	
	<!-- 댓글 | 대댓글 전체 조회 -->
	<select id="replyList" resultMap="reply">
		select 
     		   rep_no
     		   , boa_no
     		   , mem_no
     		   , nickname
     		   , rep_content
     		   , rep_enroll_date
     		   , rep_adoption
     		   , rep_status
     		   , ref_rep_no
     		   , ref_level
     		   , (select boa_category
     		   		from board b
     		   	   where r.boa_no = b.boa_no) category
     		   ,mem_profile
		  from reply r
		  join member using(mem_no)
		 where boa_no = #{bno}
		 start with ref_rep_no = 0 
	   connect by prior rep_no = ref_rep_no
		 order siblings by rep_enroll_date desc
	</select>
	
	<!-- 댓글 작성하기 -->
	<insert id="insertReply">
		insert into 
			reply
			    ( rep_no
			    , boa_no
			    , mem_no
			    , rep_content
			    , rep_enroll_date
			    , boa_category
			    )
	       values
			    ( seq_rno.nextval
			    , #{boaNo}
			    , #{memNo}
			    , #{repContent}
			    , sysdate
			    , (select boa_category
			    	 from board
			    	where boa_no in (select #{boaNo}
			    					   from reply))
			    )
	</insert>
	
	
	<!-- 대댓글 작성하기 -->
	<insert id="insertReplies">
		insert into 
		   reply
		    (
			  rep_no
			, boa_no
			, mem_no
			, rep_content
			, rep_enroll_date
			, ref_rep_no
			, ref_level
			, boa_category
			)
		    values
		    (
			  seq_rno.nextval
			 , #{boaNo}
			 , #{memNo}
			 , #{repContent}
			 , sysdate
			 , #{refRepNo}
			 , 2
			 , (select boa_category
			    	 from board
			    	where boa_no in (select #{boaNo}
			    					   from reply))
		    )
	</insert>
	
	<!-- [커뮤니티 | 칼럼] - 게시글 작성 -->
	<insert id="insertComAndCol">
		insert into 
			board
			    (
		    	boa_no
			    ,mem_no
			    ,boa_category
			    ,boa_title
			    ,boa_content
			    ,boa_enroll_date
			    ,boa_img_path
			    )
		    values
	    		(
			    seq_bno.nextval
			    ,#{mno}
			    ,#{category}
			    ,#{title}
			    ,#{content}
			    ,sysdate
			    ,#{imgPath}
			    )
	</insert>
	
	<!-- [커뮤니티 | 칼럼] - 게시글 삭제 -->
	<update id="deleteComAndCol">
		update 
			board
		set 
			boa_status = 'N'
		where 
			boa_no = #{bno}
	</update>
	
	<!-- [커뮤니티 | 칼럼] - 게시글 수정 -->
	<update id="updateComAndCol">
	update 
		board
		set 
			boa_category = #{category}
		    , boa_title =#{title}
		    , boa_content=#{content}
		    , boa_img_path =#{imgPath}
		    , boa_update_date = sysdate
		    , boa_status = 'Y'
		where 
			boa_no = #{bno}
		and boa_status = 'Y' or boa_status='F'
	</update>

	<!-- [커뮤니티, QnA] - 게시글 신고 -->
	<insert id="reportCommunity">
		insert into 
		report
		 	(
		    report_unique
		    ,mem_no
		    ,category
		    ,ref_no
		    ,report_reason
	    	)
    		values 
    		(
		    seq_repno.nextval
		    ,#{mno}
		    ,#{category}
		    ,#{refNo}
		    ,#{reason}
	    	)
	</insert>
	
	<!--[칼럼] 전체 목록 리스트 페이징 처리시 필요한 게시글 전체 count  -->
	<select id="colListCount" resultType="_int">
		select
	            count(*) count
	        from
	            board
	        where
	            regexp_like (boa_category,'칼럼')
	             and boa_status='Y'
	</select>
	
	<!--  [칼럼] - 전체 목록 리스트 조회 -->
	<select id="colList" resultMap="board">
		select
	            boa_no
	             ,nickname
	             ,boa_category
	             ,boa_title
	             ,boa_content
	             ,boa_enroll_date
	             ,boa_img_path
	             ,boa_count
	             ,boa_like
	        from board b
	                 join member using (mem_no)
	        where regexp_like (boa_category,'칼럼')
	          and boa_status='Y'
	         order by boa_enroll_date desc
	</select>
	
	<!-- 최신 | 조회수 | 댓글수 기준으로 조회 -->	
   <select id="colOrderByCount" resultMap="board">
         select
	            boa_no
	             ,nickname
	             ,boa_category
	             ,boa_title
	             ,boa_content
	             ,boa_enroll_date
	             ,boa_img_path
	             ,boa_count
	             ,boa_like
	        from board b
	                 join member using (mem_no)
	        where regexp_like (boa_category,'칼럼')
	          and boa_status='Y'
     	<choose>
	    	<when test="orderBy=='views'">
	    		 order by boa_count desc,boa_enroll_date 
	    	</when>
	    	<when test="orderBy=='likes'">
	    		order by boa_like desc,boa_enroll_date 
    		</when>
    		<otherwise>
   			   order by boa_enroll_date desc
    		</otherwise>
	    </choose>
    </select>
    
    <!-- 게시글 상세 조회 시 로그인한 회원의  좋아요 여부 -->
    <select id="likesCount" resultType="_int">
	    select 
    		count(*)
		from 
			likes
		where 
			mem_no = #{mno}
		and 
			boa_no = #{bno}
    </select>
    
    <!-- 게시글 상세 조회 시 로그인한 회원의  스크랩 여부 -->
    <select id="scrapCount" resultType="_int">
    	select 
    		count(*)
		from 
			scrap
		where 
			mem_no = #{mno}
		and 
			boa_no = #{bno}
    </select>
    
    <!-- 게시글 상세 조회 시 로그인한 회원의  후원 여부  -->
    <select id="sponsorCount" resultType="_int">
    	 select 
    		count(*)
		from 
			sponsorship
		where 
			mem_no = #{mno}
		and 
			ref_boa_no = #{bno}
    </select>
    
    <!--[ 스크랩 | 좋아요 ]  등록 -->
    <insert id="insertLike">
	   	insert 
	   		into
		   	<choose>
			   	<when test="condition =='like'">
			   		 likes 
			   	</when>
			   	<when test="condition=='scrap'">
			   		scrap
			   	</when>
		   	</choose>
		    (
		    mem_no
		    ,boa_no
		    ,
		    <choose>
		    	<when test="condition =='like'">
		    	likes_date
		    	</when>
		    	<when test="condition=='scrap'">
		    	scrap_date
		    	</when>
		    </choose>
		    )
		    values
		    (
		    #{mno}
		    ,#{bno}
		    ,sysdate
		    )
    </insert>
    
    <!--[ 스크랩 | 좋아요 ] count 증가 -->
    <update id="increaseCounts">
	    update 
	    	board
	    <choose>
	    	<when test="condition=='like'">
				set boa_like = boa_like + 1
	    	</when>
	    	<when test="condition=='scrap'">
	    		set boa_scrap = boa_scrap +1
	    	</when>
	    </choose>
		where 
			boa_no = #{bno}
    </update>
    
    <!--[ 스크랩 | 좋아요 ]  해제 -->
	<delete id="UnlikeAndUnScrap">
		delete 
			<choose>
				<when test="condition =='like'">
				likes
				</when>
				<when test="condition=='scrap'">
				scrap
				</when>
			</choose>
		where
			 mem_no = #{mno}
		and 
		 	boa_no = #{bno}
	</delete>
	
	<!-- [ 스크랩 | 좋아요 ] count 감소 -->
    <update id="decreaseCounts">
	    update 
	    	board
	    <choose>
	    	<when test="condition=='like'">
				set boa_like = boa_like -1
	    	</when>
	    	<when test="condition=='scrap'">
	    		set boa_scrap = boa_scrap -1
	    	</when>
	    </choose>
		where 
			boa_no = #{bno}
    </update>
	
	<!-- [ 칼럼 ] 관심 칼럼 조회 -->
	<select id="topBoardList" resultMap="board">
		select rownum, b.*
		from (select boa_no, boa_title, boa_img_path
		        from board
		        where boa_status='Y'
		        and regexp_like (boa_category,'칼럼')
		        order by boa_like desc) b
		where rownum between 1 and 4
		
	</select>
	
	
	<!-- [ 칼럼 ] 임시저장 등록 -->
	<insert id="colStorageInsert">
		insert into 
			board
			    (
		    	boa_no
			    ,mem_no
			    ,boa_category
			    ,boa_title
			    ,boa_content
			    ,boa_enroll_date
			    ,boa_img_path
			    ,boa_status
			    )
		    values
	    		(
			    seq_bno.nextval
			    ,#{mno}
			    ,#{category}
			    ,#{title}
			    ,#{content}
			    ,sysdate
			    ,#{imgPath}
			    ,'F'
			    )
	</insert>
	
	<!-- [ 칼럼 ]  임시저장 글 조회  -->
	<select id="selectTemSave" resultMap="board">
	  select
            boa_no
            ,mem_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
        from board b
                 join member using (mem_no)
        where boa_no = #{bno}
          and boa_status='F'
	</select>
	
	
	<!-- ********** 한솔 ********** -->
	<!-- [QnA] - QnaList 조회 시 유효한 게시글 총 개수 조회 -->
	<select id="qnaListCount" resultType="_int">
		select
			   count(*)
		  from board
		 where 
		 	   boa_category like 'QNA'
		 	   and boa_status = 'Y'
	</select>
	
	<!-- [QnA] - QnaList 사용자가 요청한 페이지에 뿌려줄 리스트 조회 -->
	<select id="qnaList" resultMap="board">
		select
			   boa_no
			 , boa_title
			 , tag_name
			 , nickname
			 , boa_enroll_date
			 , boa_like
			 , boa_count
			 , (select count(*)
			 	  from reply r
			 	 where r.boa_no = b.boa_no) reply
		  from board b
		  join member using (mem_no)
		 where
		 	   boa_category like 'QNA'
		 	   and boa_status = 'Y'
		<choose>
			<when test="orderBy == 'like'">
				order by boa_like desc
			</when>
			<when test="orderBy == 'reply'">
				order by reply desc
			</when>
			<when test="orderBy == 'count'">
				order by boa_count desc
			</when>
			<otherwise>
				order by boa_enroll_date desc
			</otherwise>
		</choose>
	</select>
	
	<!-- [QnA] - QnaEnrollForm 게시글 insert -->
	<insert id="qnaInsert">
		insert
		  into board
		  	 (
		  	   boa_no
		  	 , mem_no
		  	 , boa_category
		  	 , boa_title
		  	 , boa_content
		  	 , tag_name
		  	 , boa_enroll_date
		  	 )
		 	 values
		 	 (
		 	   seq_bno.nextval
		 	 , #{mno}
		 	 , #{category}
		 	 , #{title}
		 	 , #{content}
		 	 , #{tag}
		 	 , sysdate
		 	 )
	</insert>
	
	<!-- [QnA] - QnaEnrollForm 게시글 임시저장 -->
	<insert id="qnaStorageInsert">
		insert
		  into board
		  	 (
		  	   boa_no
		  	 , mem_no
		  	 , boa_category
		  	 , boa_status
		  	 , boa_title
		  	 , boa_content
		  	 , tag_name
		  	 , boa_enroll_date
		  	 )
		 	 values
		 	 (
		 	   seq_bno.nextval
		 	 , #{mno}
		 	 , #{category}
		 	 , 'F'
		 	 , <choose>
		 	 		<when test='title.equals("")'>
		 	 			'제목없음'
		 	 		</when>
		 	 		<otherwise>
		 	 			#{title}
		 	 		</otherwise>
		 	   </choose>
		 	 , #{content}
		 	 , #{tag}
		 	 , sysdate
		 	 )
	</insert>
	
	<!-- [QnA] - QnaDetailView 게시글 상세보기 -->
	<select id="qnaDetail" resultMap="board">
		select
			   boa_no
			 , mem_no
			 , boa_category
			 , boa_title
			 , tag_name
			 , boa_like
			 , boa_count
			 , (select count(*)
			 	  from reply r
			 	 where r.boa_no = b.boa_no) reply
			 , nickname
			 , boa_enroll_date
			 , boa_content
			 , boa_status
		  from board b
		  join member using(mem_no)
		 where
		 	   boa_no = #{bno}
		 	   and boa_category = 'QNA'
	</select>
	
	<!-- [QnA] - QnaDetailView 게시글 delete -->
	<!-- 임시저장 또는 등록된 게시글 중 채택된 댓글이 없을 경우만 delete 가능 -->
	<update id="qnaDelete">
		update board
		   set boa_status = 'N'
		 where boa_no in (select #{bno}
		                    from board b
		                    join reply r using (boa_no)
		                   where (b.boa_status = 'Y' or b.boa_status = 'F')
		                         and r.rep_adoption = 'N')
	</update>
	
	<!-- [QnA] - QnaUpdateForm 게시글 update -->
	<update id="qnaUpdate">
		update board
		   set
		   	   boa_title = #{title}
		   	 , tag_name = #{tag}
		   	 , boa_content = #{content}
		   	 , boa_status = 'Y'
		   	 , boa_update_date = sysdate
		 where boa_no = #{bno}
	</update>
	
	<!-- [QnA] - QnaDetailView 답변(댓글) 채택 -->
	<update id="adoptionReply">
		update reply
		   set rep_adoption = 'Y'
		 where rep_no = #{repNo}
	</update>
	
	
	
	<!--            동규                             -->

	<select id="itNewsSearchCount" resultType="_int">
		
		select
			   count(*)
		  from board
		 where 
		 <choose>
			<when test="condition == 'itT'">
		 	   boa_category = 'IT트렌드'
		 	</when>
		 	<when test="condition == 'cun'">
		 	   boa_category = '컨퍼런스'
		 	</when>
		 	<otherwise>
		 		boa_category = 'IT트렌드' or boa_category = '컨퍼런스'
		 	</otherwise>
		 	</choose> 
		 	   and boa_status = 'Y'
		
	</select>
	
	<select id="itNewsCount" resultType="_int">
		
		select
			   count(*)
		  from board
		 where 
		 	   boa_category = 'IT트렌드' or boa_category = '컨퍼런스'
		 	   and boa_status = 'Y'
		
	</select>
	
	<select id="itNewsSearch" resultMap="board">
	SELECT * FROM (
			select
		             boa_no
				   , mem_no
				   , boa_category
				   , boa_status
				   , boa_title
				   , boa_content
				   , boa_enroll_date
				   , boa_update_date
				   , boa_count
				   , boa_like
				   , boa_scrap
				   , tag_name
				   , boa_img_path
		        from board b
		       order by boa_No desc
		      )where  
		      <choose>
					<when test="condition == 'itT'">
				 	   boa_category = 'IT트렌드'
				 	</when>
				 	<when test="condition == 'cun'">
				 	   boa_category = '컨퍼런스'
				 	</when>
				 	<otherwise>
				 		boa_category = 'IT트렌드' or boa_category = '컨퍼런스'
				 	</otherwise>
			  </choose> 
			 	 and boa_status = 'Y'
	</select>
	
	<select id="itNews" resultMap="board">
	SELECT * FROM (
			select
		             boa_no
				   , mem_no
				   , boa_category
				   , boa_status
				   , boa_title
				   , boa_content
				   , boa_enroll_date
				   , boa_update_date
				   , boa_count
				   , boa_like
				   , boa_scrap
				   , tag_name
				   , boa_img_path
		        from board b
		       order by boa_No desc
		      )where (boa_category = 'IT트렌드' or boa_category = '컨퍼런스')
			 	 and boa_status = 'Y'
	</select>
	
	<select id="itNewsDetail" resultMap="board">
		select
	             boa_no
			   , mem_no
			   , boa_category
			   , boa_status
			   , boa_title
			   , boa_content
			   , boa_enroll_date
			   , boa_update_date
			   , boa_count
			   , boa_like
			   , boa_scrap
			   , tag_name
			   , boa_img_path
	        from board 
	                 where boa_no = #{bno}
	</select>
	
	<insert id="insertItNews">
		insert
		  into board
		  	 (
		  	   boa_no
		  	 , mem_no
		  	 , boa_category
		  	 , boa_title
		  	 , boa_content
		  	 , boa_enroll_date
		  	 )
		 	 values
		 	 (
		 	   seq_bno.nextval
		 	 , #{mno}
		 	 , #{category}
		 	 , #{title}
		 	 , #{content}
		 	 , sysdate
		 	 )
	</insert>
	
	<update id="deleteItnews">
		update board
		   set
		   	   boa_status = 'N'
		   	 , boa_update_date = sysdate
		 where boa_no = #{bno}
	</update>
	
	<update id="upadateItNews">
		update board
		   set
		   	   boa_title = #{title}
		   	 , boa_category = #{category}
		   	 , boa_content = #{content}
		   	 , boa_status = 'Y'
		   	 , boa_update_date = sysdate
		 where boa_no = #{bno}
	</update>
	
	
	
</mapper>