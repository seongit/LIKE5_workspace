<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

    <resultMap id="board" type="Board">
        <result column="boa_no" property="bno" />
        <result column="mem_no" property="mno" />
        <result column="boa_category" property="category" />
        <result column="boa_status" property="status" />
        <result column="boa_title" property="title" />
        <result column="boa_content" property="content" />
        <result column="boa_enroll_date" property="enrollDate" />
        <result column="boa_update_date" property="updateDate" />
        <result column="boa_count" property="count" />
        <result column="boa_like" property="like" />
        <result column="boa_scrap" property="scrap" />
        <result column="tag_name" property="tag" />
        <result column="boa_img_path" property="imgPath" />
        <result column="nickname" property="nickname" />
        <result column="reply" property="reply" />
    </resultMap>
    
    <resultMap id="report" type="Report">
        <result column="report_unique" property="rno" />
        <result column="mem_no" property="mno" />
        <result column="category" property="category" />
        <result column="ref_no" property="refNo" />
        <result column="report_date" property="reportDate" />
        <result column="report_reason" property="reason" />
        <result column="nickname" property="nickname" />
        <result column="boa_title" property="title" />
    </resultMap>
    
      <resultMap id="reply" type="Reply">
        <result column="rep_no" property="repNo" />
        <result column="boa_no" property="boaNo" />
        <result column="mem_no" property="memNo" />
        <result column="rep_content" property="repContent" />
        <result column="rep_enroll_date" property="repEnrollDate" />
        <result column="rep_adoption" property="repAdoption" />
        <result column="rep_status" property="repStatus" />
        <result column="ref_rep_no" property="refRepNo" />
        <result column="ref_level" property="refLevel" />
        <result column="nickname" property="nickname" />
    </resultMap>

    <!-- [재환] 관리자단 게시글 개수 조회 -->
    <select id="getBoardCount" resultType="_int">
        select count(*) from board where boa_status = 'Y'
    </select>

    <!-- [재환] 관리자단 게시글 리스트 조회 -->
    <select id="getBoardList" resultMap="board">
        select BOA_NO
             , BOA_CATEGORY
             , BOA_TITLE
             , NICKNAME
             , BOA_ENROLL_DATE
        from board
        join member using(mem_no)
        where boa_status = 'Y'
        order by boa_no desc
    </select>

    <!-- [재환] 관리자단 검색된 게시글 개수 조회 -->
    <select id="getSearchBoardCount" resultType="_int">
        select count(*)
        from board
        join member using(mem_no)
        where boa_status = 'Y'
        <choose>
            <when test="condition == 'title'">
                and boa_title
            </when>
            <when test="condition == 'category'">
                and boa_category
            </when>
            <otherwise>
                and nickname
            </otherwise>
        </choose>
        like '%' || #{keyword} || '%'
    </select>

    <!-- [재환] 관리자단 검색된 게시글 리스트 조회 -->
    <select id="getSearchBoardList" resultMap="board">
        select BOA_NO
             , BOA_CATEGORY
             , BOA_TITLE
             , NICKNAME
             , BOA_ENROLL_DATE
        from board
        join member using(mem_no)
        where boa_status = 'Y'
        <choose>
            <when test="condition == 'title'">
                and boa_title
            </when>
            <when test="condition == 'category'">
                and boa_category
            </when>
            <otherwise>
                and nickname
            </otherwise>
        </choose>
        like '%' || #{keyword} || '%'
        order
        by boa_no desc
    </select>

    <!-- [재환] 관리자단 게시글 삭제 -->
    <update id="deleteBoard">
        update board
           set boa_status = 'N'
         where boa_no = #{bno}
    </update>

    <!-- [재환] 관리자단 신고내역 개수 조회 -->
    <select id="getReportCount" resultType="_int">
        select count(*) from report
    </select>

    <!-- [재환] 관리자단 신고내역 리스트 조회 -->
    <select id="getReportList" resultMap="report">
        select REPORT_UNIQUE
             , NICKNAME
             , BOA_TITLE
             , CATEGORY
             , REPORT_REASON
             , REPORT_DATE
          from report
          join member using(MEM_NO)
          join board on(REF_NO = BOA_NO)
         order by REPORT_UNIQUE desc
    </select>

    <!-- [재환] 관리자단 검색된 신고내역 개수 조회 -->
    <select id="getSearchReportCount" resultType="_int">
        select count(*)
        from report
        join member using(MEM_NO)
        join board on(REF_NO = BOA_NO)
        where
        <choose>
            <when test="condition == 'title'">
                boa_title
            </when>
            <when test="condition == 'category'">
                category
            </when>
            <otherwise>
                nickname
            </otherwise>
        </choose>
        like '%' || #{keyword} || '%'
    </select>

    <!-- [재환] 관리자단 검색된 신고내역 리스트 조회 -->
    <select id="getSearchReportList" resultMap="report">
        select REPORT_UNIQUE
             , NICKNAME
             , BOA_TITLE
             , CATEGORY
             , REPORT_REASON
             , REPORT_DATE
        from report
        join member using(MEM_NO)
        join board on(REF_NO = BOA_NO)
        where
        <choose>
            <when test="condition == 'title'">
                boa_title
            </when>
            <when test="condition == 'category'">
                category
            </when>
            <otherwise>
                nickname
            </otherwise>
        </choose>
        like '%' || #{keyword} || '%'
        order
        by REPORT_UNIQUE desc
    </select>

    <!--                    성은                           -->

    <!-- [커뮤니티] - 전체 목록 리스트 페이징 처리시 필요한 게시글 전체 count-->
    <select id="comListCount" resultType="_int">
        select
            count(*) count
        from
            board
        where
            regexp_like (boa_category,'일상|스터디모집')
             and boa_status='Y'
    </select>

    <!-- [커뮤니티] - 전체 목록 리스트 조회  -->
    <select id="comList" resultMap="board">
         select
            boa_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
             ,(select count(*)
                from reply r
                where r.boa_no = b.boa_no) reply
        from board b
                 join member using (mem_no)
        where regexp_like (boa_category,'일상|스터디모집')
          and boa_status='Y'
     	<choose>
	    	<when test="orderBy=='count'">
	    		 order by boa_count desc
	    	</when>
	    	<when test="orderBy=='reply'">
	    		order by reply  desc
    		</when>
    		<otherwise>
   			   order by boa_enroll_date desc
    		</otherwise>
	    </choose>
    </select>

	<!-- [커뮤니티] - 키워드 검색 결과 list count -->
	<select id="comSearchListCount" resultType="_int">
		select count(*)
			from board
			join member using(mem_no)
			where boa_status = 'Y'
			and regexp_like (boa_category,'일상|스터디모집')
			<choose>
				<when test="condition=='titleAndcontent'">
					and boa_title like '%'||#{keyword}||'%' or boa_content 
				</when>
				<when test="condition=='title'">
					and boa_title 
				</when>
				<otherwise>
					and nickname 
				</otherwise>
			</choose>
			like '%'||#{keyword}||'%'
			order by boa_enroll_date desc
	</select>
	
	<!-- [커뮤니티] - 키워드 검색 결과 조회 -->
	<select id="comSearchList" resultMap="board">
	    select
            boa_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
             ,(select count(*)
                from reply r
                where r.boa_no = b.boa_no) reply
        from board b
	     join member using(mem_no)
	    where boa_status = 'Y'
	    and regexp_like (boa_category,'일상|스터디모집')
	    <choose>
		    <when test="condition=='titleAndcontent'">
		    	and boa_title like '%'||#{keyword}||'%' or boa_content 
		    </when>
		    <when test="condition=='title'">
		    	and boa_title 
		    </when>
		    <otherwise>
		    	and nickname 
	    	</otherwise>
	    </choose>
	    like '%'||#{keyword}||'%'

		order by boa_enroll_date desc
    	
	</select>

	<!-- [커뮤니티] - 카테고리별 게시글 list count -->
	<select id="comOrderByListCount" resultType="_int">
	    select
           count(*)
        from board b
	     join member using(mem_no)
	    where boa_status = 'Y'
	    <choose>
	    	<when test="condition=='daily'">
	    		and regexp_like (boa_category,'일상')
	    	</when>
	    	<otherwise>
	    		and regexp_like (boa_category,'스터디모집')
	    	</otherwise>
	    </choose>
	    order by boa_enroll_date desc
	</select>
	
	
	<!-- [커뮤니티] - 전체 | 일상 | 스터디 모집 | 카테고리별 조회 -->
	<select id="comOrderByCategory" resultMap="board">
	    select
            boa_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
             ,(select count(*)
                from reply r
                where r.boa_no = b.boa_no) reply
        from board b
	     join member using(mem_no)
	    where boa_status = 'Y'
   	    <choose>
	    	<when test="condition=='daily'">
	    		and regexp_like (boa_category,'일상')
	    	</when>
	    	<otherwise>
	    		and regexp_like (boa_category,'스터디모집')
	    	</otherwise>
	    </choose>
	    order by boa_enroll_date desc
	</select>
	
	
	<!-- 최신 | 조회수 | 댓글수 기준으로 조회 -->	
   <select id="comOrderByCount" resultMap="board">
         select
            boa_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
             ,(select count(*)
                from reply r
                where r.boa_no = b.boa_no) reply
        from board b
                 join member using (mem_no)
        where regexp_like (boa_category,'일상|스터디모집')
          and boa_status='Y'
     	<choose>
	    	<when test="orderBy=='views'">
	    		 order by boa_count desc,boa_enroll_date desc
	    	</when>
	    	<when test="orderBy=='reply'">
	    		order by reply  desc,boa_enroll_date desc
    		</when>
    		<otherwise>
   			   order by boa_enroll_date desc
    		</otherwise>
	    </choose>
    </select>
	
	<!-- 커뮤니티 게시글 상세보기 -->
	<select id="comDetail" resultMap="board">
        select
            boa_no
            ,mem_no
             ,nickname
             ,boa_category
             ,boa_title
             ,boa_content
             ,boa_enroll_date
             ,boa_img_path
             ,boa_count
             ,(select count(*)
                from reply r
                where r.boa_no = b.boa_no) reply
        from board b
                 join member using (mem_no)
        where boa_no = #{bno}
          and boa_status='Y'
	</select>
	
	<!-- 게시글 상세보기시 조회수 증가 -->
	<update id="increaseCount">
	     update 
	     	board
         set 
         	boa_count = boa_count + 1
         where 
            boa_no = #{bno}
         and boa_status='Y'
	</update>
	
	<!-- 댓글 | 대댓글 전체 조회 -->
	<select id="replyList" resultMap="reply">
		 select 
	            rep_no
	            ,boa_no
	            ,nickname
	            ,rep_content
	            ,rep_enroll_date
	            ,rep_adoption
	            ,rep_status
	            ,ref_rep_no
	            ,ref_level
	        from reply
	        join member using(mem_no)
	        where boa_no = #{bno}
	        order by rep_enroll_date desc
	</select>
	
	<!-- 댓글 작성하기 -->
	<insert id="insertReply">
		insert into 
			reply
			    (rep_no
			    ,boa_no
			    ,mem_no
			    ,rep_content
			    ,rep_enroll_date
			    )
	    	values
			    (seq_rno.nextval
			    ,#{boaNo}
			    ,#{memNo}
			    ,#{repContent}
			    ,sysdate
			    )
	</insert>
	
	
	<!-- 대댓글 작성하기 -->
	<insert id="insertReplies">
		insert into 
		   reply
		    (
			    rep_no
			    ,boa_no
			    ,mem_no
			    ,rep_content
			    ,rep_enroll_date
			    ,ref_rep_no
			    ,ref_level
			    )
		    values
		    (
			    seq_rno.nextval
			    ,#{boaNo}
			    ,#{memNo}
			    ,#{repContent}
			    ,sysdate
			    ,#{refRepNo}
			    ,2
		    )
	</insert>
	
	<!-- 커뮤니티 게시글 작성하기 -->
	<insert id="insertCommunity">
		insert into 
			board
			    (
		    	boa_no
			    ,mem_no
			    ,boa_category
			    ,boa_title
			    ,boa_content
			    ,boa_enroll_date
			    ,boa_img_path
			    )
		    values
	    		(
			    seq_bno.nextval
			    ,#{mno}
			    ,#{category}
			    ,#{title}
			    ,#{content}
			    ,sysdate
			    ,#{imgPath}
			    )
	</insert>
	
	<!-- 커뮤니티 게시글 삭제하기 -->
	<update id="deleteCommunity">
		update 
			board
		set 
			boa_status = 'N'
		where 
			boa_no = #{bno}
	</update>
	
	


</mapper>